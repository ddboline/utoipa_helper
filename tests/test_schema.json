{
  "openapi": "3.1.0",
  "info": {
    "title": "Utoipa Helper",
    "description": "Helper Macros For Utoipa Axum",
    "contact": {
      "name": "Daniel Boline",
      "email": "ddboline@gmail.com"
    },
    "license": {
      "name": "MIT",
      "identifier": "MIT"
    },
    "version": "0.1.5"
  },
  "paths": {
    "/": {
      "get": {
        "operationId": "test_response",
        "parameters": [
          {
            "name": "a",
            "in": "query",
            "description": "fieldA",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "b",
            "in": "query",
            "description": "fieldB",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Test Description",
            "content": {
              "text/html": {
                "schema": {
                  "type": "object",
                  "required": [
                    "a",
                    "b"
                  ],
                  "properties": {
                    "a": {
                      "type": "integer",
                      "format": "int32",
                      "description": "fieldA",
                      "minimum": 0
                    },
                    "b": {
                      "type": "integer",
                      "format": "int32",
                      "description": "fieldB",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "405": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Test0": {
        "type": "object",
        "required": [
          "a",
          "b"
        ],
        "properties": {
          "a": {
            "type": "integer",
            "format": "int32",
            "description": "fieldA",
            "minimum": 0
          },
          "b": {
            "type": "integer",
            "format": "int32",
            "description": "fieldB",
            "minimum": 0
          }
        }
      },
      "TestJson": {
        "type": "object",
        "required": [
          "field",
          "id",
          "value"
        ],
        "properties": {
          "field": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string"
          }
        }
      }
    }
  }
}